---
import Badge from '@components/Badge.astro';
import BaseLayout from '@components/BaseLayout.astro';
// import type { Props as BadgeProps } from '@components/Badge.astro';
import { Authors, SITE } from '@config';
import Sidebar from '@components/Sidebar/Sidebar.astro';
import { Picture } from '@astrojs/image/components';
import { blogImage } from '@util/images';
import type { Author, Heading } from '@types';
import '../styles/shiki.css';

export interface Props {
	content: {
		title: string;
		description: string;
		pubDate: string;
		author: string;
		category: 'dev' | 'exploit' | 'misc' | 'release';
		heroImage?: {
			src: string;
			alt: string;
		};
	};
	headings: Heading[];
}

const {
	content: { title, description, pubDate, author, category, heroImage },
	headings,
} = Astro.props as Props;

const authorInfo = Authors[author] as Author;

const meta = {
	title: title,
	description: description,
	image: heroImage ? heroImage.src : SITE.image,
	creator: authorInfo?.twitter,
};

let heroImg;
if (heroImage != undefined) {
	heroImg = await blogImage(heroImage.src);
}
---

<BaseLayout meta={meta}>
	<article class="prose !prose-custom prose-sm md:prose-base mx-auto max-w-6xl transition-all duration-200 dark:!prose-custom-invert">
		<header>
			<div class="not-prose sm:mt-0 mt-6">
				<h1 class="font-bold text-2xl sm:text-[40px] sm:leading-tight leading:normal text-lm-heading dark:text-dm-heading mb-3">{title}</h1>
				<div class="flex items-center space-x-4 mb-5">
					<Badge type={category} size={'large'} />
					<time class="text-text-faded">{pubDate}</time>
				</div>
			</div>
			{heroImg && (
				<div class="min-w-full">
					<Picture src={heroImg} alt="Telekom-Logo on a wall" aspectRatio={16 / 9} widths={[200, 400, 2166]} sizes="(max-width: 800px) 100vw, 800px" />
				</div>
			)}
		</header>
		<div class="flex justify-center gap-5">
			<main class="main basis-[686px] max-w-[686px] min-w-0">
				<slot />
			</main>
			<aside class="basis-64 flex-grow-0 flex-shrink ml-auto not-prose sticky h-fit top-0 hidden sm:block">
				{headings.length !== 0 && <Sidebar headings={headings} />}
			</aside>
		</div>
	</article>
</BaseLayout>

<style>
	article > header :global(picture) {
		@apply w-full h-[350px];
	}
	article > header :global(img) {
		@apply w-full h-[350px] object-cover rounded-lg overflow-hidden;
	}
	main :global(h2, h3, h4) {
		@apply scroll-mt-5;
	}
</style>
